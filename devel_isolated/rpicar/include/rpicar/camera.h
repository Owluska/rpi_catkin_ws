// Generated by gencpp from file rpicar/camera.msg
// DO NOT EDIT!


#ifndef RPICAR_MESSAGE_CAMERA_H
#define RPICAR_MESSAGE_CAMERA_H

#include <ros/service_traits.h>


#include <rpicar/cameraRequest.h>
#include <rpicar/cameraResponse.h>


namespace rpicar
{

struct camera
{

typedef cameraRequest Request;
typedef cameraResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct camera
} // namespace rpicar


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rpicar::camera > {
  static const char* value()
  {
    return "bef1df590ed75ed1f393692395e15482";
  }

  static const char* value(const ::rpicar::camera&) { return value(); }
};

template<>
struct DataType< ::rpicar::camera > {
  static const char* value()
  {
    return "rpicar/camera";
  }

  static const char* value(const ::rpicar::camera&) { return value(); }
};


// service_traits::MD5Sum< ::rpicar::cameraRequest> should match
// service_traits::MD5Sum< ::rpicar::camera >
template<>
struct MD5Sum< ::rpicar::cameraRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rpicar::camera >::value();
  }
  static const char* value(const ::rpicar::cameraRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rpicar::cameraRequest> should match
// service_traits::DataType< ::rpicar::camera >
template<>
struct DataType< ::rpicar::cameraRequest>
{
  static const char* value()
  {
    return DataType< ::rpicar::camera >::value();
  }
  static const char* value(const ::rpicar::cameraRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rpicar::cameraResponse> should match
// service_traits::MD5Sum< ::rpicar::camera >
template<>
struct MD5Sum< ::rpicar::cameraResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rpicar::camera >::value();
  }
  static const char* value(const ::rpicar::cameraResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rpicar::cameraResponse> should match
// service_traits::DataType< ::rpicar::camera >
template<>
struct DataType< ::rpicar::cameraResponse>
{
  static const char* value()
  {
    return DataType< ::rpicar::camera >::value();
  }
  static const char* value(const ::rpicar::cameraResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RPICAR_MESSAGE_CAMERA_H
